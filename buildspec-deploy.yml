version: 0.2

phases:
  install:
    commands:
      - echo "Downloading kubectl v1.32.3 from EKS S3…"
      - curl -sSL -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.3/2025-04-17/bin/linux/amd64/kubectl
      - chmod +x kubectl && mv kubectl /usr/local/bin/
      - kubectl version --client
      - echo "Installing AWS CLI…"
      - curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscli.zip"
      - unzip -q awscli.zip && ./aws/install --update

  pre_build:
    commands:
      - echo "Preparing kubeconfig…"
      - mkdir -p ~/.kube
      - aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_DEFAULT_REGION
      - export KUBECONFIG=~/.kube/config
      - echo "KUBECONFIG is $KUBECONFIG"

  build:
    commands:
      - echo "Retrieving DB credentials from Secrets Manager…"
      - SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id $SECRET_ARN --query SecretString --output text)
      - USERNAME=$(echo $SECRET_JSON | jq -r .username)
      - PASSWORD=$(echo $SECRET_JSON | jq -r .password)
      - DBNAME=$(echo $SECRET_JSON | jq -r .dbname)

      - |
        cat <<EOF > k8s/db-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: db-credentials
          namespace: hello-app
        type: Opaque
        stringData:
          DB_USER: $USERNAME
          DB_PASS: $PASSWORD
          DB_NAME: $DBNAME
        EOF

      - echo "Applying Kubernetes manifests with validation disabled…"
      - |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        AWS_REGION=$AWS_DEFAULT_REGION
        envsubst < k8s/postgres-deploy.yaml | kubectl apply --validate=false -f -
      - |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        AWS_REGION=$AWS_DEFAULT_REGION
        envsubst < k8s/frontend-deploy.yaml | kubectl apply --validate=false -f -
      - kubectl apply --validate=false -f k8s/namespace.yaml
      - kubectl apply --validate=false -f k8s/db-secret.yaml
      - kubectl apply --validate=false -f k8s/postgres-service.yaml
      - kubectl apply --validate=false -f k8s/frontend-service.yaml

artifacts:
  files:
    - '**/*'
